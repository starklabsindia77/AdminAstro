{"version":3,"file":"static/js/4355.b468c53b.chunk.js","mappings":"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","sources":["../node_modules/@mui/utils/esm/usePreviousProps.js","../node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js","../node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js","../node_modules/@mui/base/BadgeUnstyled/useBadge.js","../node_modules/@mui/material/Badge/badgeClasses.js","../node_modules/@mui/material/Badge/Badge.js","../node_modules/@mui/material/utils/shouldSpreadAdditionalProps.js","../node_modules/sentence-case/src/index.ts"],"sourcesContent":["import * as React from 'react';\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePreviousProps;","import generateUtilityClasses from '../generateUtilityClasses';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('BaseBadge', slot);\n}\nconst badgeUnstyledClasses = generateUtilityClasses('BaseBadge', ['root', 'badge', 'invisible']);\nexport default badgeUnstyledClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","import { usePreviousProps } from '@mui/utils';\nexport default function useBadge(props) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = props;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : props;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}","import generateUtilityClasses from '@mui/base/generateUtilityClasses';\nimport generateUtilityClass from '@mui/base/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular', // TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"anchorOrigin\", \"className\", \"component\", \"components\", \"componentsProps\", \"overlap\", \"color\", \"invisible\", \"max\", \"badgeContent\", \"showZero\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { usePreviousProps } from '@mui/utils';\nimport BadgeUnstyled from '@mui/base/BadgeUnstyled';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport shouldSpreadAdditionalProps from '../utils/shouldSpreadAdditionalProps';\nimport capitalize from '../utils/capitalize';\nimport badgeClasses, { getBadgeUtilityClass } from './badgeClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst extendUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  return {\n    root: clsx(classes.root, 'root'),\n    badge: clsx(classes.badge, getBadgeUtilityClass('badge'), getBadgeUtilityClass(variant), `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, getBadgeUtilityClass(`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`), getBadgeUtilityClass(`overlap${capitalize(overlap)}`), color !== 'default' && [getBadgeUtilityClass(`color${capitalize(color)}`), classes[`color${capitalize(color)}`]], invisible && getBadgeUtilityClass('invisible'))\n  };\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  })\n}, ownerState.color !== 'default' && {\n  backgroundColor: theme.palette[ownerState.color].main,\n  color: theme.palette[ownerState.color].contrastText\n}, ownerState.variant === 'dot' && {\n  borderRadius: RADIUS_DOT,\n  height: RADIUS_DOT * 2,\n  minWidth: RADIUS_DOT * 2,\n  padding: 0\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  right: 0,\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  top: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular' && {\n  bottom: 0,\n  left: 0,\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, -50%)',\n  transformOrigin: '100% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  right: '14%',\n  transform: 'scale(1) translate(50%, 50%)',\n  transformOrigin: '100% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(50%, 50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  top: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, -50%)',\n  transformOrigin: '0% 0%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, -50%)'\n  }\n}, ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular' && {\n  bottom: '14%',\n  left: '14%',\n  transform: 'scale(1) translate(-50%, 50%)',\n  transformOrigin: '0% 100%',\n  [`&.${badgeClasses.invisible}`]: {\n    transform: 'scale(0) translate(-50%, 50%)'\n  }\n}, ownerState.invisible && {\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.leavingScreen\n  })\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  var _componentsProps$root, _componentsProps$root2, _componentsProps$badg, _componentsProps$badg2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    component = 'span',\n    components = {},\n    componentsProps = {},\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max,\n    badgeContent: badgeContentProp,\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n\n  const ownerState = _extends({}, props, {\n    anchorOrigin,\n    invisible,\n    color,\n    overlap,\n    variant\n  });\n\n  const classes = extendUtilityClasses(ownerState);\n  let displayValue;\n\n  if (variant !== 'dot') {\n    displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;\n  }\n\n  return /*#__PURE__*/_jsx(BadgeUnstyled, _extends({\n    invisible: invisibleProp,\n    badgeContent: displayValue,\n    showZero: showZero,\n    max: max\n  }, other, {\n    components: _extends({\n      Root: BadgeRoot,\n      Badge: BadgeBadge\n    }, components),\n    className: clsx(className, classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, shouldSpreadAdditionalProps(components.Root) && {\n        as: component,\n        ownerState: _extends({}, (_componentsProps$root2 = componentsProps.root) == null ? void 0 : _componentsProps$root2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      }),\n      badge: _extends({}, componentsProps.badge, {\n        className: clsx(classes.badge, (_componentsProps$badg = componentsProps.badge) == null ? void 0 : _componentsProps$badg.className)\n      }, shouldSpreadAdditionalProps(components.Badge) && {\n        ownerState: _extends({}, (_componentsProps$badg2 = componentsProps.badge) == null ? void 0 : _componentsProps$badg2.ownerState, {\n          anchorOrigin,\n          color,\n          overlap,\n          variant\n        })\n      })\n    },\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import { isHostComponent } from '@mui/base';\n\nconst shouldSpreadAdditionalProps = Slot => {\n  return !Slot || !isHostComponent(Slot);\n};\n\nexport default shouldSpreadAdditionalProps;","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n"],"names":["value","ref","React","current","getBadgeUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BadgeUnstyled","props","component","children","className","components","componentsProps","max","maxProp","showZero","other","_objectWithoutPropertiesLoose","badgeContentProp","badgeContent","invisible","invisibleProp","prevProps","usePreviousProps","displayValue","Number","useBadge","_extends","ownerState","classes","slots","root","badge","composeClasses","undefined","useUtilityClasses","Root","rootProps","appendOwnerState","Badge","badgeProps","_jsxs","clsx","_jsx","BadgeRoot","styled","name","overridesResolver","styles","position","display","verticalAlign","flexShrink","BadgeBadge","variant","capitalize","anchorOrigin","vertical","horizontal","overlap","color","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","RADIUS_STANDARD","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","backgroundColor","palette","main","contrastText","RADIUS_DOT","top","right","transform","transformOrigin","badgeClasses","bottom","left","leavingScreen","inProps","_componentsProps$root","_componentsProps$root2","_componentsProps$badg","_componentsProps$badg2","useThemeProps","anchorOriginProp","overlapProp","colorProp","variantProp","extendUtilityClasses","shouldSpreadAdditionalProps","as","Slot","isHostComponent","sentenceCaseTransform","input","index","result","toLowerCase","upperCaseFirst","sentenceCase","options","noCase","__assign","delimiter"],"sourceRoot":""}