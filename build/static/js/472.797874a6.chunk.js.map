{"version":3,"file":"static/js/472.797874a6.chunk.js","mappings":"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","sources":["pages/dashboard/BlogEditPost.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/param-case/src/index.ts","../node_modules/dot-case/src/index.ts","../node_modules/sentence-case/src/index.ts"],"sourcesContent":["// @mui\r\nimport { Container } from '@mui/material';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport { sentenceCase } from 'change-case';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport axios from '../../utils/axios';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport { BlogNewPostForm } from '../../sections/@dashboard/blog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogEditPost() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const { pathname } = useLocation();\r\n    const isMountedRef = useIsMountedRef();\r\n    const [error, setError] = useState(null);\r\n\r\n    const { title } = useParams();\r\n  const [ currentBlog, setCurrentBlog ] = useState({});\r\n\r\n  const isEdit = pathname.includes('edit');\r\n\r\n  const getPost = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`/blog/post/${title}`);\r\n\r\n      if (isMountedRef.current) {\r\n        setCurrentBlog(response.data.post);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  useEffect(() => {\r\n    getPost();    \r\n  }, [ getPost]);\r\n\r\n\r\n  return (\r\n    <Page title=\"Blog: Edit Post\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Edit a post\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Blog', href: PATH_DASHBOARD.blog.root },\r\n            { name: sentenceCase(title) },\r\n          ]}\r\n        />\r\n\r\n        <BlogNewPostForm  isEdit={isEdit} currentBlog={currentBlog}/>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n","import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function sentenceCaseTransform(input: string, index: number) {\n  const result = input.toLowerCase();\n  if (index === 0) return upperCaseFirst(result);\n  return result;\n}\n\nexport function sentenceCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: sentenceCaseTransform,\n    ...options,\n  });\n}\n"],"names":["BlogEditPost","themeStretch","useSettings","pathname","useLocation","isMountedRef","useIsMountedRef","useState","setError","title","useParams","currentBlog","setCurrentBlog","isEdit","includes","getPost","useCallback","axios","response","current","data","post","console","error","message","useEffect","maxWidth","heading","links","name","href","PATH_DASHBOARD","sentenceCase","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","Typography","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","separator","userSelect","insertSeparators","items","className","reduce","acc","index","length","concat","push","React","inProps","ref","useThemeProps","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","filter","child","map","clsx","slice","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","paramCase","input","options","noCase","__assign","delimiter","dotCase","sentenceCaseTransform","result","toLowerCase","upperCaseFirst","transform"],"sourceRoot":""}