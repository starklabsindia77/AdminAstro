{"version":3,"file":"static/js/9920.965d71ea.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/order/new-edit-form/index.js","pages/dashboard/OrderEdit.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useMemo, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { Controller, useForm } from 'react-hook-form';\r\n\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Table,\r\n  TableRow,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TextField, \r\n  TableContainer, Box, Stack, Button, Divider, Typography, InputAdornment, MenuItem\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n// mock\r\nimport { _orderAddressFrom } from '../../../../_mock';\r\n// components\r\nimport { RHFSelect, RHFTextField , FormProvider } from '../../../../components/hook-form';\r\nimport { fDate } from '../../../../utils/formatTime';\r\nimport useResponsive from '../../../../hooks/useResponsive';\r\n// utils\r\nimport { fNumber, fCurrency } from '../../../../utils/formatNumber';\r\n\r\nimport Label from '../../../../components/Label';\r\nimport Image from '../../../../components/Image';\r\nimport Scrollbar from '../../../../components/Scrollbar';\r\n\r\n//\r\n\r\n\r\n// ----------------------------------------------------------------------\r\nconst RowResultStyle = styled(TableRow)(({ theme }) => ({\r\n  '& td': {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst STATUS_OPTIONS = ['New Order', 'In Transit', 'Delivered', 'Cancelled'];\r\n\r\nOrderNewEditForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentOrder: PropTypes.object,\r\n};\r\n\r\nexport default function OrderNewEditForm({ isEdit, currentOrder }) {\r\n  const navigate = useNavigate();\r\n\r\n  const upMd = useResponsive('up', 'md');\r\n\r\n  const theme = useTheme();\r\n \r\n\r\n  const [loadingSave, setLoadingSave] = useState(false);\r\n\r\n  const [loadingSend, setLoadingSend] = useState(false);\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    createDate: Yup.string().nullable().required('Create date is required'),\r\n    dueDate: Yup.string().nullable().required('Due date is required'),\r\n    shipping_info: Yup.mixed().nullable().required('Order to is required'),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      orderId: currentOrder?.order_id || '17099',\r\n      createDate: currentOrder?.createDate || null,\r\n      dueDate: currentOrder?.dueDate || null,\r\n      shippingFee: currentOrder?.shipping_fee || '',\r\n      status: currentOrder?.status || 'draft',\r\n      gst: currentOrder?.gst || '',\r\n      subTotal: currentOrder?.sub_total || '',\r\n      total: currentOrder?.total || '',\r\n      shippingInfo: currentOrder?.shipping_info || { name: '', mobile_number: '', address: '', town: '', city: '', state: '', pincode: '' },\r\n      items: currentOrder?.cart_info || [{ title: '', description: '', service: '', quantity: 0, price: 0, total: 0 }],\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentOrder]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    control,\r\n    reset,\r\n    watch,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentOrder) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentOrder]);\r\n\r\n  const newOrder = {\r\n    ...values,\r\n    items: values.items.map((item) => ({\r\n      ...item,\r\n      total: item.quantity * item.price,\r\n    })),\r\n  };\r\n\r\n  const handleSaveAsDraft = async () => {\r\n    setLoadingSave(true);\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      setLoadingSave(true);\r\n      navigate(PATH_DASHBOARD.order.list);\r\n      console.log(JSON.stringify(newOrder, null, 2));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(\"test update\", data);\r\n  };\r\n\r\n  const handleCreateAndSend = async () => {\r\n    setLoadingSend(true);\r\n    console.log(\"test update 2\", values);   \r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Card>       \r\n        <Stack\r\n          spacing={{ xs: 2, md: 5 }}\r\n          direction={{ xs: 'column', md: 'row' }}\r\n          divider={<Divider flexItem orientation={upMd ? 'vertical' : 'horizontal'} sx={{ borderStyle: 'dashed' }} />}\r\n          sx={{ p: 3 }}\r\n        >\r\n          <Grid container >           \r\n            <Grid item xs={12} sm={6} sx={{ mb: 5 }}>\r\n              <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                Order from\r\n              </Typography>\r\n              <Typography variant=\"body2\">{values.shippingInfo?.name}</Typography>\r\n              <Typography variant=\"body2\">{values.shippingInfo?.address}, {values.shippingInfo?.town}</Typography>\r\n              <Typography variant=\"body2\">{values.shippingInfo?.city}, {values.shippingInfo?.state} - {values.shippingInfo?.pincode}</Typography>\r\n              <Typography variant=\"body2\">Phone: {values.shippingInfo?.mobile_number}</Typography>\r\n            </Grid>           \r\n          </Grid>\r\n        </Stack>\r\n        <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }} sx={{ p: 3, bgcolor: 'background.neutral' }}>\r\n          <RHFTextField disabled name=\"orderNumber\" label=\"Order number\" value={`INV-${values.orderId}`} />\r\n          <RHFSelect\r\n            fullWidth\r\n            name=\"status\"\r\n            label=\"Status\"\r\n            InputLabelProps={{ shrink: true }}\r\n            SelectProps={{ native: false, sx: { textTransform: 'capitalize' } }}\r\n          >\r\n            {STATUS_OPTIONS.map((option) => (\r\n              <MenuItem\r\n                key={option}\r\n                value={option}\r\n                sx={{\r\n                  mx: 1,\r\n                  my: 0.5,\r\n                  borderRadius: 0.75,\r\n                  typography: 'body2',\r\n                  textTransform: 'capitalize',\r\n                }}\r\n              >\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </RHFSelect>\r\n\r\n          <Controller\r\n            name=\"createDate\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <DatePicker\r\n                label=\"Date create\"\r\n                value={field.value}\r\n                onChange={(newValue) => {\r\n                  field.onChange(newValue);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} disabled fullWidth error={!!error} helperText={error?.message} />}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Controller\r\n            name=\"dueDate\"\r\n            control={control}\r\n            render={({ field, fieldState: { error } }) => (\r\n              <DatePicker\r\n                label=\"Due date\"\r\n                value={field.value}\r\n                onChange={(newValue) => {\r\n                  field.onChange(newValue);\r\n                }}\r\n                renderInput={(params) => <TextField {...params} fullWidth error={!!error} helperText={error?.message} />}\r\n              />\r\n            )}\r\n          />\r\n        </Stack>\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\r\n            Details:\r\n          </Typography>\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 860 }}>\r\n              <Table>\r\n                <TableHead\r\n                  sx={{\r\n                    borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                    '& th': { backgroundColor: 'transparent' },\r\n                  }}\r\n                >\r\n                  <TableRow>\r\n                    <TableCell width={40}>#</TableCell>\r\n                    <TableCell align=\"left\">Description</TableCell>\r\n                    <TableCell align=\"left\">Qty</TableCell>\r\n                    <TableCell align=\"right\">Unit price</TableCell>\r\n                    <TableCell align=\"right\">Total</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                  {values.items?.map((row, index) => (\r\n                    <TableRow\r\n                      key={index}\r\n                      sx={{\r\n                        borderBottom: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                      }}\r\n                    >\r\n                      <TableCell>{index + 1}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Box sx={{ maxWidth: 560 }}>\r\n                          <Typography variant=\"subtitle2\">{row.title}</Typography>                        \r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.quantity}</TableCell>\r\n                      <TableCell align=\"right\">{`₹ ${fCurrency(row.price)}`}</TableCell>\r\n                      <TableCell align=\"right\">{`₹ ${fCurrency(row.price * row.quantity)}`}</TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n\r\n                  <RowResultStyle>\r\n                    <TableCell colSpan={3} />\r\n                    <TableCell align=\"right\">\r\n                      <Box sx={{ mt: 2 }} />\r\n                      <Typography>Subtotal</Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" width={120}>\r\n                      <Box sx={{ mt: 2 }} />\r\n                      <Typography>{`₹ ${fCurrency(values.subTotal)}`}</Typography>\r\n                    </TableCell>\r\n                  </RowResultStyle>\r\n\r\n                  <RowResultStyle>\r\n                    <TableCell colSpan={3} />\r\n                    <TableCell align=\"right\">\r\n                      <Typography>Shipping Fees</Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" width={120}>\r\n                      <Typography >{values.shippingFee && `₹ ${fCurrency(+values.shippingFee)}`}</Typography>\r\n                    </TableCell>\r\n                  </RowResultStyle>\r\n\r\n                  <RowResultStyle>\r\n                    <TableCell colSpan={3} />\r\n                    <TableCell align=\"right\">\r\n                      <Typography>Taxes</Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" width={120}>\r\n                      <Typography>{values.gst && `₹ ${fCurrency(values.gst)}`}</Typography>\r\n                    </TableCell>\r\n                  </RowResultStyle>\r\n\r\n                  <RowResultStyle>\r\n                    <TableCell colSpan={3} />\r\n                    <TableCell align=\"right\">\r\n                      <Typography variant=\"h6\">Total</Typography>\r\n                    </TableCell>\r\n                    <TableCell align=\"right\" width={140}>\r\n                      <Typography variant=\"h6\">{`₹ ${fCurrency(values.total)}`}</Typography>\r\n                    </TableCell>\r\n                  </RowResultStyle>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>          \r\n        </Box>\r\n\r\n\r\n        <Stack justifyContent=\"flex-end\" direction=\"row\" spacing={2} sx={{mb: 5, mr: 5}}>\r\n          <LoadingButton\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            loading={isSubmitting}            \r\n          >\r\n            {isEdit ? 'Update' : 'Create'}\r\n          </LoadingButton>\r\n        </Stack>        \r\n      </Card>      \r\n    </FormProvider>\r\n  );\r\n}\r\n","import { useParams } from 'react-router-dom';\r\nimport { useState, useLayoutEffect, useEffect  } from 'react';\r\n// @mui\r\nimport { Container } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _orders } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport OrderNewEditForm from '../../sections/@dashboard/order/new-edit-form';\r\nimport axios from '../../utils/axios';\r\nimport { isValidToken, setSession } from '../../utils/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function OrderEdit() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const { id } = useParams();\r\n\r\n  // const currentOrder = _orders.find((order) => order.id === id);\r\n  const [order, setOrder] = useState({});\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n  useEffect(async () => {    \r\n    if (accessToken && isValidToken(accessToken)) {\r\n      setSession(accessToken);\r\n      const response = await axios.get(`/orders/${id}`);\r\n      const { data } = response.data;\r\n      setOrder(data[0]);\r\n    }\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <Page title=\"Orders: Edit\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Edit order\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Orders', href: PATH_DASHBOARD.order.list },\r\n            { name: `INV-${order?.order_id}` || '' },\r\n          ]}\r\n        />\r\n\r\n        <OrderNewEditForm isEdit currentOrder={order} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","RowResultStyle","styled","TableRow","theme","paddingTop","spacing","paddingBottom","STATUS_OPTIONS","OrderNewEditForm","isEdit","currentOrder","upMd","useNavigate","useResponsive","useTheme","useState","NewUserSchema","Yup","shape","createDate","nullable","required","dueDate","shipping_info","defaultValues","useMemo","orderId","order_id","shippingFee","shipping_fee","status","gst","subTotal","sub_total","total","shippingInfo","mobile_number","address","town","city","state","pincode","items","cart_info","title","description","service","quantity","price","methods","useForm","resolver","yupResolver","control","reset","watch","handleSubmit","isSubmitting","formState","values","useEffect","item","onSubmit","data","console","log","Card","Stack","xs","md","direction","divider","Divider","flexItem","orientation","borderStyle","p","Grid","container","sm","paragraph","disabled","label","value","fullWidth","InputLabelProps","shrink","SelectProps","native","textTransform","option","MenuItem","mx","my","typography","render","field","error","fieldState","DatePicker","onChange","newValue","renderInput","params","TextField","helperText","message","Scrollbar","TableContainer","minWidth","Table","TableHead","borderBottom","palette","backgroundColor","TableCell","align","TableBody","row","index","fCurrency","colSpan","justifyContent","LoadingButton","type","size","loading","OrderEdit","themeStretch","useSettings","id","useParams","order","setOrder","accessToken","localStorage","getItem","isValidToken","setSession","axios","response","Page","Container","PATH_DASHBOARD"],"sourceRoot":""}