{"version":3,"file":"static/js/5697.fa544bfe.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","pages/BlogSingle.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useParams } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n// @mui\r\nimport { Box, Card, Divider, Container, Typography, Pagination } from '@mui/material';\r\n// routes\r\nimport { PATH_PAGE } from '../routes/paths';\r\n// hooks\r\nimport useSettings from '../hooks/useSettings';\r\nimport useIsMountedRef from '../hooks/useIsMountedRef';\r\n// utils\r\nimport axios from '../utils/axios';\r\n// components\r\nimport Page from '../components/Page';\r\nimport Markdown from '../components/Markdown';\r\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\r\nimport { SkeletonPost } from '../components/skeleton';\r\n// sections\r\nimport {\r\n  BlogPostHero,\r\n  BlogPostTags,\r\n  BlogPostRecent,\r\n  BlogPostCommentList,\r\n  BlogPostCommentForm,\r\n} from '../sections/blogs';\r\n\r\nimport blog from '../data/blogs.json';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(8),\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingTop: theme.spacing(15),\r\n    paddingBottom: theme.spacing(15),\r\n  },\r\n}));\r\n\r\n\r\nexport default function BlogSingle() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const { title } = useParams();\r\n  const [allPosts, setAllPosts] = useState(blog);\r\n\r\n  const [recentPosts, setRecentPosts] = useState([]);\r\n\r\n  const [post, setPost] = useState(null);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const getPost = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`/blog/post/${title}`);\r\n\r\n      if (isMountedRef.current) {\r\n        setPost(response.data.post);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  const getRecentPosts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`/blog/posts/recent/${title}`);\r\n\r\n      if (isMountedRef.current) {\r\n        setRecentPosts(response.data.recentPosts);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    getRecentPosts();\r\n  }, [getRecentPosts, getPost]);\r\n\r\n\r\n  return (\r\n    <Page title=\"Blog: Post Details\">\r\n\r\n      <RootStyle>\r\n        <Container maxWidth={themeStretch ? false : 'lg'}>\r\n          <HeaderBreadcrumbs\r\n            heading=\"Post Details\"\r\n            links={[\r\n              { name: 'Home', href: PATH_PAGE.root },\r\n              { name: 'Blog', href: PATH_PAGE.blog.root },\r\n              { name: sentenceCase(title) },\r\n            ]}\r\n          />\r\n\r\n          {post && (\r\n            <Card>\r\n              <BlogPostHero post={post} />\r\n\r\n              <Box sx={{ p: { xs: 3, md: 5 } }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 5 }}>\r\n                  {post.description}\r\n                </Typography>\r\n\r\n                <Markdown children={post.content} />\r\n\r\n                <Box sx={{ my: 5 }}>\r\n                  <Divider />\r\n                  <BlogPostTags post={post} />\r\n                  {/* <Divider /> */}\r\n                </Box>\r\n\r\n                {/* <Box sx={{ display: 'flex', mb: 2 }}>\r\n                  <Typography variant=\"h4\">Comments</Typography>\r\n                  <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n                    ({post.comments.length})\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <BlogPostCommentList post={post} />\r\n\r\n                <Box sx={{ mb: 5, mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <Pagination count={8} color=\"primary\" />\r\n                </Box>\r\n\r\n                <BlogPostCommentForm /> */}\r\n              </Box>\r\n            </Card>\r\n          )}\r\n\r\n          {!post && !error && <SkeletonPost />}\r\n\r\n          {error && <Typography variant=\"h6\">404 {error}!</Typography>}\r\n\r\n          <BlogPostRecent posts={recentPosts} />\r\n        </Container>\r\n      </RootStyle>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","RootStyle","styled","theme","paddingTop","spacing","breakpoints","up","paddingBottom","BlogSingle","themeStretch","useSettings","isMountedRef","useIsMountedRef","title","useParams","useState","blog","recentPosts","setRecentPosts","post","setPost","error","setError","getPost","useCallback","axios","response","current","data","console","message","getRecentPosts","useEffect","PATH_PAGE","sentenceCase","p","xs","md","description","children","content","my","posts"],"sourceRoot":""}