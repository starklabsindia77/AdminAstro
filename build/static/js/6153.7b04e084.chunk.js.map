{"version":3,"file":"static/js/6153.7b04e084.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/sessions/SessionsNewEditForm.js","pages/dashboard/SessionsCreate.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport dayjs from 'dayjs';\r\nimport { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { useForm, Controller, useFormContext, useFieldArray } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  TextField,\r\n  Switch,\r\n  Typography,\r\n  Button,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Divider,\r\n  InputAdornment,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers-pro';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers-pro/AdapterDayjs';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\n// utils\r\nimport { fData, fNumber } from '../../../utils/formatNumber';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// _mock\r\nimport { countries } from '../../../_mock';\r\nimport axios from '../../../utils/axios';\r\nimport { isValidToken, setSession } from '../../../utils/jwt';\r\n// components\r\nimport Label from '../../../components/Label';\r\nimport {\r\n  FormProvider,\r\n  RHFSelect,\r\n  RHFTimePicker,\r\n  RHFSwitch,\r\n  RHFTextField,\r\n  RHFDateRange,\r\n  RHFUploadAvatar,\r\n} from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSessionsNewEditForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentSessions: PropTypes.object,\r\n};\r\n\r\nexport default function SessionsNewEditForm({ isEdit, currentSessions }) {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // const NewSessionsSchema = Yup.object().shape({\r\n  //   name: Yup.string().required('Name is required'),\r\n  //   email: Yup.string().required('Email is required').email(),\r\n  //   mobileNo: Yup.string().required('Phone number is required'),\r\n  //   address: Yup.string().required('Address is required'),\r\n  //   country: Yup.string().required('country is required'),\r\n  //   firstName: Yup.string().required('First Name is required'),\r\n  //   state: Yup.string().required('State is required'),\r\n  //   city: Yup.string().required('City is required'),\r\n  //   lastName: Yup.string().required('Last Name is required'),\r\n  // });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      slot: currentSessions?.slot || [\r\n        {\r\n          startTime: '',\r\n          endTime: '',\r\n        },\r\n      ],\r\n      startDate: currentSessions?.startDate || '',\r\n      endDate: currentSessions?.endDate || '',\r\n      TimeInterval: currentSessions?.TimeInterval || '',\r\n      monday: currentSessions?.monday || false,\r\n      tuesday: currentSessions?.tuesday || false,\r\n      wednesday: currentSessions?.wednesday || false,\r\n      thursday: currentSessions?.thursday || false,\r\n      friday: currentSessions?.friday || false,\r\n      saturday: currentSessions?.saturday || false,\r\n      sunday: currentSessions?.sunday || false,\r\n      // status: currentSessions?.status,\r\n      // firstName: currentSessions?.firstName || '',\r\n      // lastName: currentSessions?.lastName || '',\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentSessions]\r\n  );\r\n\r\n  const today = new Date();\r\n\r\n  const methods = useForm({\r\n    // resolver: yupResolver(NewSessionsSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: 'slot',\r\n  });\r\n\r\n  const handleAdd = () => {\r\n    append({\r\n      startTime: '',\r\n      endTime: '',\r\n    });\r\n  };\r\n  const handleRemove = (index) => {\r\n    remove(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentSessions) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentSessions]);\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      let response;\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      if (accessToken && isValidToken(accessToken)) {\r\n        setSession(accessToken);\r\n        if(isEdit){\r\n          // const response = await axios.put(`/user/${currentSessions?.id}`, data);\r\n        }else{\r\n          response = await axios.post('/sessions', data);\r\n        }          \r\n        // const { user } = response.data;\r\n      }\r\n      \r\n      // await new Promise((resolve) => setTimeout(resolve, 500));\r\n      // reset();\r\n      if(response.status === 200){\r\n        enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n        navigate(PATH_DASHBOARD.sessions.list);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={2} />\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Box sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 1.5 }}>\r\n                Date Range\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  display: 'grid',\r\n                  columnGap: 2,\r\n                  rowGap: 3,\r\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n                  marginBottom: '10px',\r\n                }}\r\n              >\r\n                \r\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                  <DatePicker\r\n                    views={['day']}\r\n                    name=\"startDate\"\r\n                    label=\"Start Date\"\r\n                    value={values.startDate}\r\n                    onChange={(newValue) => {\r\n                      setValue('startDate', newValue);\r\n                    }}\r\n                    minDate={today}\r\n                    renderInput={(params) => <TextField {...params} helperText={null} />}\r\n                  />\r\n                  <DatePicker\r\n                    views={['day']}\r\n                    name=\"endDate\" \r\n                    label=\"End Date\" \r\n                    value={values.endDate}\r\n                    onChange={(newValue) => {\r\n                      setValue('endDate', newValue);\r\n                    }}\r\n                    minDate={today}\r\n                    renderInput={(params) => <TextField {...params} helperText={null} />}\r\n                  />\r\n                </LocalizationProvider>\r\n\r\n               \r\n               \r\n              </Box>\r\n              <RHFTextField name=\"TimeInterval\" label=\"Time Interval\" sx={{ marginBottom: '10px' }} />\r\n\r\n              <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 1.5 }}>\r\n                Week Days\r\n              </Typography>\r\n              <Box\r\n                sx={{\r\n                  display: 'grid',\r\n                  columnGap: 2,\r\n                  rowGap: 3,\r\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(3, 1fr)' },\r\n                }}\r\n              >\r\n                <RHFSwitch\r\n                  name=\"monday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Monday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"tuesday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Tuesday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"wednesday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        wednesday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"thursday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Thursday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"friday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Friday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"saturday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Saturday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n                <RHFSwitch\r\n                  name=\"sunday\"\r\n                  labelPlacement=\"start\"\r\n                  label={\r\n                    <>\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        Sunday\r\n                      </Typography>\r\n                    </>\r\n                  }\r\n                  sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" sx={{ color: 'text.disabled', mb: 3 }}>\r\n                Time Options:\r\n              </Typography>\r\n\r\n              <Stack divider={<Divider flexItem sx={{ borderStyle: 'dashed' }} />} spacing={3}>\r\n                {fields.map((item, index) => (\r\n                  <Stack key={item.id} alignItems=\"flex-end\" spacing={1.5}>\r\n                    <Stack direction={{ xs: 'column', md: 'row' }} spacing={2} sx={{ width: 1 }}>\r\n                      <RHFTimePicker\r\n                        value={values.slot[index].startTime}\r\n                        onChange={(newValue) => {\r\n                          setValue(`slot[${index}].startTime`, newValue);\r\n                        }}\r\n                        name={`slot[${index}].startTime`}\r\n                        label=\"Start Time\"\r\n                      />\r\n                      <RHFTimePicker\r\n                        value={values.slot[index].endTime}\r\n                        onChange={(newValue) => {\r\n                          setValue(`slot[${index}].endTime`, newValue);\r\n                        }}\r\n                        name={`slot[${index}].endTime`}\r\n                        label=\"End Time\"\r\n                      />\r\n                    </Stack>\r\n\r\n                    <Button\r\n                      size=\"small\"\r\n                      color=\"error\"\r\n                      startIcon={<Iconify icon=\"eva:trash-2-outline\" />}\r\n                      onClick={() => handleRemove(index)}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  </Stack>\r\n                ))}\r\n              </Stack>\r\n\r\n              <Divider sx={{ my: 3, borderStyle: 'dashed' }} />\r\n\r\n              <Stack\r\n                spacing={2}\r\n                direction={{ xs: 'column-reverse', md: 'row' }}\r\n                alignItems={{ xs: 'flex-start', md: 'center' }}\r\n              >\r\n                <Button\r\n                  size=\"small\"\r\n                  startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                  onClick={handleAdd}\r\n                  sx={{ flexShrink: 0 }}\r\n                >\r\n                  Add new Option\r\n                </Button>\r\n              </Stack>\r\n            </Box>\r\n\r\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                {!isEdit ? 'Create Sessions' : 'Save Changes'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport { paramCase, capitalCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { Container } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _userList } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport SessionsNewEditForm from '../../sections/@dashboard/sessions/SessionsNewEditForm';\r\nimport axios from '../../utils/axios';\r\nimport { isValidToken, setSession } from '../../utils/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SessionsCreate() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const { name = '' } = useParams();\r\n  const [ currentUser, setCurrentUser ] = useState({});\r\n\r\n  const isEdit = pathname.includes('edit');\r\n//   useEffect(async () => {\r\n//     const accessToken = localStorage.getItem('accessToken');\r\n\r\n//         if (accessToken && isValidToken(accessToken) && isEdit) {\r\n//           setSession(accessToken);\r\n//           const response = await axios.get(`/user/${name}`); \r\n//           const { user } = response.data;\r\n//           setCurrentUser(user);\r\n//         }\r\n//   }, [name])\r\n\r\n  // const currentUser = _userList.find((sessions) => paramCase(sessions.name) === name);\r\n\r\n  return (\r\n    <Page title=\"Sessions: Create a new Sessions\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading={!isEdit ? 'Create a new sessions' : 'Edit sessions'}          \r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Sessions', href: PATH_DASHBOARD.sessions.list },\r\n            { name: !isEdit ? 'New sessions' : capitalCase(name) },\r\n          ]}\r\n\r\n        \r\n       />\r\n\r\n        <SessionsNewEditForm isEdit={isEdit} currentSessions={currentUser} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","SessionsNewEditForm","isEdit","currentSessions","navigate","useNavigate","enqueueSnackbar","useSnackbar","defaultValues","useMemo","slot","startTime","endTime","startDate","endDate","TimeInterval","monday","tuesday","wednesday","thursday","friday","saturday","sunday","today","Date","methods","useForm","reset","watch","control","setValue","handleSubmit","isSubmitting","formState","values","useFieldArray","fields","append","remove","useEffect","onSubmit","data","accessToken","localStorage","getItem","isValidToken","setSession","axios","response","status","PATH_DASHBOARD","console","log","Grid","container","spacing","item","xs","md","Card","p","columnGap","rowGap","gridTemplateColumns","sm","marginBottom","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","label","value","onChange","newValue","minDate","renderInput","params","TextField","helperText","labelPlacement","mx","justifyContent","Stack","divider","Divider","flexItem","borderStyle","index","direction","Button","size","startIcon","Iconify","onClick","handleRemove","id","my","LoadingButton","type","loading","SessionsCreate","themeStretch","useSettings","pathname","useLocation","useParams","useState","currentUser","includes","Page","title","Container","capitalCase"],"sourceRoot":""}