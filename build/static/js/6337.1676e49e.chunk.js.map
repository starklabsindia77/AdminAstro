{"version":3,"file":"static/js/6337.1676e49e.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","hooks/useTabs.js","sections/@dashboard/user/account/AccountChangePassword.js","sections/@dashboard/user/account/AccountGeneral.js","sections/@dashboard/user/account/AccountSocialLinks.js","pages/dashboard/UserAccount.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function useTabs(defaultValues) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event, newValue) => {\r\n      setCurrentTab(newValue);\r\n    },\r\n    setCurrentTab,\r\n  };\r\n}\r\n","import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountChangePassword() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ChangePassWordSchema = Yup.object().shape({\r\n    oldPassword: Yup.string().required('Old Password is required'),\r\n    newPassword: Yup.string().min(6, 'Password must be at least 6 characters').required('New Password is required'),\r\n    confirmNewPassword: Yup.string().oneOf([Yup.ref('newPassword'), null], 'Passwords must match'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmNewPassword: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(ChangePassWordSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          <RHFTextField name=\"oldPassword\" type=\"password\" label=\"Old Password\" />\r\n\r\n          <RHFTextField name=\"newPassword\" type=\"password\" label=\"New Password\" />\r\n\r\n          <RHFTextField name=\"confirmNewPassword\" type=\"password\" label=\"Confirm New Password\" />\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable react/prop-types */\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n// form\r\nimport { useForm, Controller, useFormContext } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Box, Grid, Card, Stack, Typography, TextField   } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// hooks\r\nimport useAuth from '../../../../hooks/useAuth';\r\n// utils\r\nimport { fData } from '../../../../utils/formatNumber';\r\n// _mock\r\nimport { countries } from '../../../../_mock';\r\n// components\r\nimport { FormProvider, RHFSwitch, RHFSelect, RHFTextField, RHFUploadAvatar } from '../../../../components/hook-form';\r\nimport axios from '../../../../utils/axios';\r\nimport { isValidToken, setSession } from '../../../../utils/jwt';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountGeneral() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { user } = useAuth();\r\n\r\n  const UpdateUserSchema = Yup.object().shape({\r\n    displayName: Yup.string().required('Name is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    displayName: user?.displayName || '',\r\n    email: user?.email || '',\r\n    firstName: user?.firstName || '',\r\n    lastName: user?.lastName || '',\r\n    photoURL: user?.photoURL || '',\r\n    mobileNo: user?.mobileNo || '',\r\n    country: user?.country || '',\r\n    address: user?.address || '',\r\n    state: user?.state || '',\r\n    city: user?.city || '',\r\n    zipCode: user?.zipCode || '',    \r\n    skill: user?.skill || '',\r\n    bio: user?.bio || '',\r\n    isPublic: user?.isPublic || false,\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(UpdateUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {    \r\n    try {\r\n      await axios.put(`/adminupdate/${user?.id}`, data);\r\n      enqueueSnackbar('Update success!');\r\n      \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'photoURL',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ py: 10, px: 3, textAlign: 'center' }}>\r\n            <RHFUploadAvatar\r\n              name=\"photoURL\"\r\n              accept=\"image/*\"\r\n              maxSize={3145728}\r\n              onDrop={handleDrop}\r\n              helperText={\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  sx={{\r\n                    mt: 2,\r\n                    mx: 'auto',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    color: 'text.secondary',\r\n                  }}\r\n                >\r\n                  Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                  <br /> max size of {fData(3145728)}\r\n                </Typography>\r\n              }\r\n            />\r\n\r\n            <RHFSwitch name=\"isPublic\" labelPlacement=\"start\" label=\"Public Profile\" sx={{ mt: 5 }} />\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                rowGap: 3,\r\n                columnGap: 2,\r\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n              }}\r\n            >\r\n              <RHFTextField name=\"firstName\" label=\"First Name\" />\r\n              <RHFTextField name=\"lastName\" label=\"Last Name\" />\r\n              <RHFTextField name=\"displayName\" label=\"Full Name\" />\r\n              <RHFTextField name=\"email\" label=\"Email Address\" />              \r\n              <RHFTextField name=\"mobileNo\" label=\"Phone Number\" />\r\n              <RHFTextField name=\"address\" label=\"Address\" />\r\n\r\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\r\n                <option value=\"\" />\r\n                {countries.map((option) => (\r\n                  <option key={option.code} value={option.label}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField name=\"state\" label=\"State/Region\" />\r\n\r\n              <RHFTextField name=\"city\" label=\"City\" />\r\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\r\n            </Box>\r\n\r\n            <Stack spacing={3} alignItems=\"flex-end\" sx={{ mt: 3 }}>            \r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                Save Changes\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Stack, Card, InputAdornment } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport { FormProvider, RHFTextField } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIAL_LINKS = [\r\n  {\r\n    value: 'facebookLink',\r\n    icon: <Iconify icon={'eva:facebook-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'instagramLink',\r\n    icon: <Iconify icon={'ant-design:instagram-filled'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'linkedinLink',\r\n    icon: <Iconify icon={'eva:linkedin-fill'} width={24} height={24} />,\r\n  },\r\n  {\r\n    value: 'twitterLink',\r\n    icon: <Iconify icon={'eva:twitter-fill'} width={24} height={24} />,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAccountSocialLinks.propTypes = {\r\n  myProfile: PropTypes.shape({\r\n    facebookLink: PropTypes.string,\r\n    instagramLink: PropTypes.string,\r\n    linkedinLink: PropTypes.string,\r\n    twitterLink: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default function AccountSocialLinks({ myProfile }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const defaultValues = {\r\n    facebookLink: myProfile.facebookLink,\r\n    instagramLink: myProfile.instagramLink,\r\n    linkedinLink: myProfile.linkedinLink,\r\n    twitterLink: myProfile.twitterLink,\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          {SOCIAL_LINKS.map((link) => (\r\n            <RHFTextField\r\n              key={link.value}\r\n              name={link.value}\r\n              InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">{link.icon}</InputAdornment>,\r\n              }}\r\n            />\r\n          ))}\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n","/* eslint-disable consistent-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { capitalCase } from 'change-case';\r\nimport { useState, useLayoutEffect, useEffect } from 'react';\r\n// @mui\r\nimport { Container, Tab, Box, Tabs } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useTabs from '../../hooks/useTabs';\r\nimport useSettings from '../../hooks/useSettings';\r\n// _mock_\r\nimport { _userPayment, _userAddressBook, _userInvoices, _userAbout } from '../../_mock';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Iconify from '../../components/Iconify';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// sections\r\nimport {\r\n  AccountGeneral,\r\n  AccountBilling,\r\n  AccountSocialLinks,\r\n  AccountNotifications,\r\n  AccountChangePassword,\r\n} from '../../sections/@dashboard/user/account';\r\n\r\nimport { isValidToken, setSession } from '../../utils/jwt';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport axios from '../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserAccount() {\r\n  \r\n  const { themeStretch } = useSettings();\r\n\r\n  const { currentTab, onChangeTab } = useTabs('general');\r\n\r\n  const ACCOUNT_TABS = [\r\n    {\r\n      value: 'general',\r\n      icon: <Iconify icon={'ic:round-account-box'} width={20} height={20} />,\r\n      component: <AccountGeneral />,\r\n    },   \r\n    {\r\n      value: 'change_password',\r\n      icon: <Iconify icon={'ic:round-vpn-key'} width={20} height={20} />,\r\n      component: <AccountChangePassword />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Page title=\"Admin: Account Settings\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Account\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Admin', href: PATH_DASHBOARD.user.root },\r\n            { name: 'Account Settings' },\r\n          ]}\r\n        />\r\n\r\n        <Tabs\r\n          allowScrollButtonsMobile\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          value={currentTab}\r\n          onChange={onChangeTab}\r\n        >\r\n          {ACCOUNT_TABS.map((tab) => (\r\n            <Tab disableRipple key={tab.value} label={capitalCase(tab.value)} icon={tab.icon} value={tab.value} />\r\n          ))}\r\n        </Tabs>\r\n\r\n        <Box sx={{ mb: 5 }} />\r\n\r\n        {ACCOUNT_TABS.map((tab) => {\r\n          const isMatched = tab.value === currentTab;\r\n          return isMatched && <Box key={tab.value}>{tab.component}</Box>;\r\n        })}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","useTabs","defaultValues","useState","currentTab","setCurrentTab","onChangeTab","event","newValue","AccountChangePassword","enqueueSnackbar","useSnackbar","ChangePassWordSchema","Yup","shape","oldPassword","required","newPassword","min","confirmNewPassword","oneOf","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","onSubmit","Promise","resolve","setTimeout","console","error","p","spacing","type","label","loading","AccountGeneral","user","useAuth","UpdateUserSchema","displayName","email","firstName","lastName","photoURL","mobileNo","country","address","state","city","zipCode","skill","bio","isPublic","setValue","data","axios","id","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","container","item","xs","md","py","px","textAlign","accept","maxSize","onDrop","helperText","mx","fData","labelPlacement","rowGap","columnGap","gridTemplateColumns","sm","placeholder","value","countries","option","code","UserAccount","themeStretch","useSettings","ACCOUNT_TABS","Page","title","Container","PATH_DASHBOARD","Tabs","allowScrollButtonsMobile","scrollButtons","onChange","tab","Tab","disableRipple","capitalCase"],"sourceRoot":""}