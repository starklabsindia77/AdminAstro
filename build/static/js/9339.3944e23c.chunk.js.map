{"version":3,"file":"static/js/9339.3944e23c.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","pages/dashboard/PermissionDenied.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBreadcrumbs.propTypes = {\r\n  activeLast: PropTypes.bool,\r\n  links: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\r\n  const currentLink = links[links.length - 1].name;\r\n\r\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\r\n\r\n  const listActiveLast = links.map((link) => (\r\n    <div key={link.name}>\r\n      {link.name !== currentLink ? (\r\n        <LinkItem link={link} />\r\n      ) : (\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            maxWidth: 260,\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            color: 'text.disabled',\r\n            textOverflow: 'ellipsis',\r\n          }}\r\n        >\r\n          {currentLink}\r\n        </Typography>\r\n      )}\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <MUIBreadcrumbs\r\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\r\n      {...other}\r\n    >\r\n      {activeLast ? listDefault : listActiveLast}\r\n    </MUIBreadcrumbs>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLinkItem.propTypes = {\r\n  link: PropTypes.shape({\r\n    href: PropTypes.string,\r\n    icon: PropTypes.any,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction LinkItem({ link }) {\r\n  const { href, name, icon } = link;\r\n  return (\r\n    <Link\r\n      key={name}\r\n      variant=\"body2\"\r\n      component={RouterLink}\r\n      to={href || '#'}\r\n      sx={{\r\n        lineHeight: 2,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: 'text.primary',\r\n        '& > div': { display: 'inherit' },\r\n      }}\r\n    >\r\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\r\n      {name}\r\n    </Link>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Typography, Link } from '@mui/material';\r\n//\r\nimport Breadcrumbs from './Breadcrumbs';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <Breadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {typeof moreLink === 'string' ? (\r\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link\r\n              noWrap\r\n              key={href}\r\n              href={href}\r\n              variant=\"body2\"\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              sx={{ display: 'table' }}\r\n            >\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: theme.shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { useState } from 'react';\r\n// @mui\r\nimport { Box, Card, Container, Typography, CardHeader, ToggleButton, ToggleButtonGroup } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\n// guards\r\nimport RoleBasedGuard from '../../guards/RoleBasedGuard';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PermissionDenied() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const [role, setRole] = useState('admin');\r\n\r\n  const handleChangeRole = (event, newRole) => {\r\n    if (newRole !== null) {\r\n      setRole(newRole);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Permission Denied\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Permission Denied\"\r\n          links={[\r\n            {\r\n              name: 'Dashboard',\r\n              href: PATH_DASHBOARD.root,\r\n            },\r\n            { name: 'Permission Denied' },\r\n          ]}\r\n        />\r\n\r\n        <ToggleButtonGroup exclusive value={role} onChange={handleChangeRole} color=\"primary\" sx={{ mb: 5 }}>\r\n          <ToggleButton value=\"admin\" aria-label=\"admin role\">\r\n            isAdmin\r\n          </ToggleButton>\r\n\r\n          <ToggleButton value=\"user\" aria-label=\"user role\">\r\n            isUser\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n\r\n        <RoleBasedGuard hasContent roles={[role]}>\r\n          <Box\r\n            sx={{\r\n              display: 'grid',\r\n              gap: 3,\r\n              gridTemplateColumns: 'repeat(2, 1fr)',\r\n            }}\r\n          >\r\n            {[...Array(8)].map((_, index) => (\r\n              <Card key={index}>\r\n                <CardHeader title={`Card ${index + 1}`} subheader=\"Proin viverra ligula\" />\r\n\r\n                <Typography sx={{ p: 3, color: 'text.secondary' }}>\r\n                  Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. In enim justo, rhoncus ut, imperdiet\r\n                  a, venenatis vitae, justo. Vestibulum fringilla pede sit amet augue.\r\n                </Typography>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </RoleBasedGuard>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  return _extends({}, theme.typography.button, {\n    borderRadius: theme.shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${theme.palette.divider}`,\n    color: theme.palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: theme.palette.action.disabled,\n      border: `1px solid ${theme.palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","isValueSelected","value","candidate","undefined","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonGroupRoot","styled","overridesResolver","props","styles","ownerState","toggleButtonGroupClasses","grouped","capitalize","orientation","root","vertical","fullWidth","theme","_extends","shape","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","React","inProps","ref","useThemeProps","children","className","disabled","exclusive","onChange","size","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","handleChange","event","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","_jsx","role","clsx","child","selected","PermissionDenied","themeStretch","useSettings","useState","setRole","Page","title","Container","PATH_DASHBOARD","newRole","ToggleButton","RoleBasedGuard","hasContent","roles","gap","gridTemplateColumns","_","Card","CardHeader","subheader","p","createSvgIcon","d","BreadcrumbCollapsedButton","ButtonBase","spacing","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","focusRipple","getBreadcrumbsUtilityClass","BreadcrumbsRoot","breadcrumbsClasses","li","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","reduce","acc","current","push","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","listRef","allItems","filter","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","getCardHeaderUtilityClass","CardHeaderRoot","cardHeaderClasses","CardHeaderAvatar","avatar","flex","CardHeaderAction","alignSelf","marginBottom","CardHeaderContent","content","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","type","_jsxs","as","getToggleButtonUtilityClass","ToggleButtonRoot","selectedColor","text","primary","main","typography","button","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","alpha","hoverOpacity","selectedOpacity","fontSize","pxToRem","disableFocusRipple","defaultPrevented"],"sourceRoot":""}