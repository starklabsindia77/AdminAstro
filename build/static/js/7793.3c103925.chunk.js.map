{"version":3,"file":"static/js/7793.3c103925.chunk.js","mappings":"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","sources":["sections/auth/verify-code/VerifyCodeForm.js","pages/auth/VerifyCode.js"],"sourcesContent":["import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Stack, OutlinedInput, FormHelperText } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport { FormProvider } from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCodeForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const VerifyCodeSchema = Yup.object().shape({\r\n    code1: Yup.string().required('Code is required'),\r\n    code2: Yup.string().required('Code is required'),\r\n    code3: Yup.string().required('Code is required'),\r\n    code4: Yup.string().required('Code is required'),\r\n    code5: Yup.string().required('Code is required'),\r\n    code6: Yup.string().required('Code is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    code1: '',\r\n    code2: '',\r\n    code3: '',\r\n    code4: '',\r\n    code5: '',\r\n    code6: '',\r\n  };\r\n\r\n  const methods = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(VerifyCodeSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    const target = document.querySelector('input.field-code');\r\n\r\n    target?.addEventListener('paste', handlePaste);\r\n\r\n    return () => {\r\n      target?.removeEventListener('paste', handlePaste);\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handlePaste = (event) => {\r\n    let data = event.clipboardData.getData('text');\r\n\r\n    data = data.split('');\r\n\r\n    [].forEach.call(document.querySelectorAll('.field-code'), (node, index) => {\r\n      node.value = data[index];\r\n\r\n      const fieldIndex = `code${index + 1}`;\r\n\r\n      setValue(fieldIndex, data[index]);\r\n    });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChangeWithNextField = (event, handleChange) => {\r\n    const { maxLength, value, name } = event.target;\r\n\r\n    const fieldIndex = name.replace('code', '');\r\n\r\n    const fieldIntIndex = Number(fieldIndex);\r\n\r\n    if (value.length >= maxLength) {\r\n      if (fieldIntIndex < 6) {\r\n        const nextfield = document.querySelector(`input[name=code${fieldIntIndex + 1}]`);\r\n\r\n        if (nextfield !== null) {\r\n          nextfield.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    handleChange(event);\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      console.log('data', Object.values(data).join(''));\r\n\r\n      enqueueSnackbar('Verify success!');\r\n\r\n      navigate(PATH_DASHBOARD.root, { replace: true });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        <Stack direction=\"row\" spacing={2} justifyContent=\"center\">\r\n          {Object.keys(values).map((name, index) => (\r\n            <Controller\r\n              key={name}\r\n              name={`code${index + 1}`}\r\n              control={control}\r\n              render={({ field, fieldState: { error } }) => (\r\n                <OutlinedInput\r\n                  {...field}\r\n                  error={!!error}\r\n                  autoFocus={index === 0}\r\n                  placeholder=\"-\"\r\n                  onChange={(event) => handleChangeWithNextField(event, field.onChange)}\r\n                  inputProps={{\r\n                    className: 'field-code',\r\n                    maxLength: 1,\r\n                    sx: {\r\n                      p: 0,\r\n                      textAlign: 'center',\r\n                      width: { xs: 36, sm: 56 },\r\n                      height: { xs: 36, sm: 56 },\r\n                    },\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          ))}\r\n        </Stack>\r\n\r\n        {(!!errors.code1 || !!errors.code2 || !!errors.code3 || !!errors.code4 || !!errors.code5 || !!errors.code6) && (\r\n          <FormHelperText error sx={{ px: 2 }}>\r\n            Code is required\r\n          </FormHelperText>\r\n        )}\r\n\r\n        <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting} sx={{ mt: 3 }}>\r\n          Verify\r\n        </LoadingButton>\r\n      </Stack>\r\n    </FormProvider>\r\n  );\r\n}\r\n","// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Link, Container, Typography } from '@mui/material';\r\n// layouts\r\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\r\n// components\r\nimport Page from '../../components/Page';\r\n// sections\r\nimport { VerifyCodeForm } from '../../sections/auth/verify-code';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  flexDirection: 'column',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function VerifyCode() {\r\n  return (\r\n    <Page title=\"Verify Code\">\r\n      <LogoOnlyLayout />\r\n\r\n      <Container>\r\n        <ContentStyle sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            Please check your email!\r\n          </Typography>\r\n\r\n          <Typography sx={{ color: 'text.secondary' }}>\r\n            We have emailed a 6-digit confirmation code to acb@domain, please enter the code in below box to verify your\r\n            email.\r\n          </Typography>\r\n\r\n          <Box sx={{ mt: 5, mb: 3 }}>\r\n            <VerifyCodeForm />\r\n          </Box>\r\n\r\n          <Typography variant=\"body2\">\r\n            Donâ€™t have a code? &nbsp;\r\n            <Link variant=\"subtitle2\" onClick={() => {}}>\r\n              Resend code\r\n            </Link>\r\n          </Typography>\r\n        </ContentStyle>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"names":["VerifyCodeForm","navigate","useNavigate","enqueueSnackbar","useSnackbar","VerifyCodeSchema","Yup","shape","code1","required","code2","code3","code4","code5","code6","methods","useForm","mode","resolver","yupResolver","defaultValues","watch","control","setValue","handleSubmit","formState","isSubmitting","errors","values","useEffect","target","document","querySelector","addEventListener","handlePaste","removeEventListener","event","data","clipboardData","getData","split","forEach","call","querySelectorAll","node","index","value","fieldIndex","preventDefault","onSubmit","Promise","resolve","setTimeout","console","log","Object","join","PATH_DASHBOARD","replace","error","Stack","spacing","direction","justifyContent","keys","map","name","render","field","fieldState","OutlinedInput","autoFocus","placeholder","onChange","handleChange","maxLength","fieldIntIndex","Number","length","nextfield","focus","handleChangeWithNextField","inputProps","className","sx","p","textAlign","width","xs","sm","height","FormHelperText","px","LoadingButton","fullWidth","size","type","variant","loading","mt","ContentStyle","styled","maxWidth","margin","minHeight","display","flexDirection","padding","theme","VerifyCode","Page","title","LogoOnlyLayout","Container","Typography","paragraph","color","Box","mb","Link","onClick"],"sourceRoot":""}